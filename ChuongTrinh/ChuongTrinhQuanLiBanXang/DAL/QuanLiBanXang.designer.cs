#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLiBanXang")]
	public partial class QuanLiBanXangDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBangThue(BangThue instance);
    partial void UpdateBangThue(BangThue instance);
    partial void DeleteBangThue(BangThue instance);
    partial void InsertDonGiaBan(DonGiaBan instance);
    partial void UpdateDonGiaBan(DonGiaBan instance);
    partial void DeleteDonGiaBan(DonGiaBan instance);
    partial void InsertDonGiaNhap(DonGiaNhap instance);
    partial void UpdateDonGiaNhap(DonGiaNhap instance);
    partial void DeleteDonGiaNhap(DonGiaNhap instance);
    partial void InsertHangNhap(HangNhap instance);
    partial void UpdateHangNhap(HangNhap instance);
    partial void DeleteHangNhap(HangNhap instance);
    partial void InsertMatHang(MatHang instance);
    partial void UpdateMatHang(MatHang instance);
    partial void DeleteMatHang(MatHang instance);
    partial void InsertHangBan(HangBan instance);
    partial void UpdateHangBan(HangBan instance);
    partial void DeleteHangBan(HangBan instance);
    partial void InsertKhoXang(KhoXang instance);
    partial void UpdateKhoXang(KhoXang instance);
    partial void DeleteKhoXang(KhoXang instance);
    #endregion
		
		public QuanLiBanXangDataContext() : 
				base(global::DAL.Properties.Settings.Default.QuanLiBanXangConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLiBanXangDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLiBanXangDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLiBanXangDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLiBanXangDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BangThue> BangThues
		{
			get
			{
				return this.GetTable<BangThue>();
			}
		}
		
		public System.Data.Linq.Table<DonGiaBan> DonGiaBans
		{
			get
			{
				return this.GetTable<DonGiaBan>();
			}
		}
		
		public System.Data.Linq.Table<DonGiaNhap> DonGiaNhaps
		{
			get
			{
				return this.GetTable<DonGiaNhap>();
			}
		}
		
		public System.Data.Linq.Table<HangNhap> HangNhaps
		{
			get
			{
				return this.GetTable<HangNhap>();
			}
		}
		
		public System.Data.Linq.Table<MatHang> MatHangs
		{
			get
			{
				return this.GetTable<MatHang>();
			}
		}
		
		public System.Data.Linq.Table<HangBan> HangBans
		{
			get
			{
				return this.GetTable<HangBan>();
			}
		}
		
		public System.Data.Linq.Table<KhoXang> KhoXangs
		{
			get
			{
				return this.GetTable<KhoXang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangThue")]
	public partial class BangThue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThue;
		
		private double _PhanTramTinh;
		
		private System.DateTime _NgayCapNhat;
		
		private bool _LaThueHienTai;
		
		private bool _LaMua;
		
		private EntitySet<HangNhap> _HangNhaps;
		
		private EntitySet<HangBan> _HangBans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThueChanging(string value);
    partial void OnMaThueChanged();
    partial void OnPhanTramTinhChanging(double value);
    partial void OnPhanTramTinhChanged();
    partial void OnNgayCapNhatChanging(System.DateTime value);
    partial void OnNgayCapNhatChanged();
    partial void OnLaThueHienTaiChanging(bool value);
    partial void OnLaThueHienTaiChanged();
    partial void OnLaMuaChanging(bool value);
    partial void OnLaMuaChanged();
    #endregion
		
		public BangThue()
		{
			this._HangNhaps = new EntitySet<HangNhap>(new Action<HangNhap>(this.attach_HangNhaps), new Action<HangNhap>(this.detach_HangNhaps));
			this._HangBans = new EntitySet<HangBan>(new Action<HangBan>(this.attach_HangBans), new Action<HangBan>(this.detach_HangBans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThue", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThue
		{
			get
			{
				return this._MaThue;
			}
			set
			{
				if ((this._MaThue != value))
				{
					this.OnMaThueChanging(value);
					this.SendPropertyChanging();
					this._MaThue = value;
					this.SendPropertyChanged("MaThue");
					this.OnMaThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanTramTinh", DbType="Float NOT NULL")]
		public double PhanTramTinh
		{
			get
			{
				return this._PhanTramTinh;
			}
			set
			{
				if ((this._PhanTramTinh != value))
				{
					this.OnPhanTramTinhChanging(value);
					this.SendPropertyChanging();
					this._PhanTramTinh = value;
					this.SendPropertyChanged("PhanTramTinh");
					this.OnPhanTramTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="Date NOT NULL")]
		public System.DateTime NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaThueHienTai", DbType="Bit NOT NULL")]
		public bool LaThueHienTai
		{
			get
			{
				return this._LaThueHienTai;
			}
			set
			{
				if ((this._LaThueHienTai != value))
				{
					this.OnLaThueHienTaiChanging(value);
					this.SendPropertyChanging();
					this._LaThueHienTai = value;
					this.SendPropertyChanged("LaThueHienTai");
					this.OnLaThueHienTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaMua", DbType="Bit NOT NULL")]
		public bool LaMua
		{
			get
			{
				return this._LaMua;
			}
			set
			{
				if ((this._LaMua != value))
				{
					this.OnLaMuaChanging(value);
					this.SendPropertyChanging();
					this._LaMua = value;
					this.SendPropertyChanged("LaMua");
					this.OnLaMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangThue_HangNhap", Storage="_HangNhaps", ThisKey="MaThue", OtherKey="MaThue")]
		public EntitySet<HangNhap> HangNhaps
		{
			get
			{
				return this._HangNhaps;
			}
			set
			{
				this._HangNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangThue_HangBan", Storage="_HangBans", ThisKey="MaThue", OtherKey="MaThue")]
		public EntitySet<HangBan> HangBans
		{
			get
			{
				return this._HangBans;
			}
			set
			{
				this._HangBans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HangNhaps(HangNhap entity)
		{
			this.SendPropertyChanging();
			entity.BangThue = this;
		}
		
		private void detach_HangNhaps(HangNhap entity)
		{
			this.SendPropertyChanging();
			entity.BangThue = null;
		}
		
		private void attach_HangBans(HangBan entity)
		{
			this.SendPropertyChanging();
			entity.BangThue = this;
		}
		
		private void detach_HangBans(HangBan entity)
		{
			this.SendPropertyChanging();
			entity.BangThue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonGiaBan")]
	public partial class DonGiaBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDonGia;
		
		private string _MaMatHang;
		
		private System.Nullable<decimal> _Gia;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private System.Nullable<bool> _LaGiaHienTai;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonGiaChanging(string value);
    partial void OnMaDonGiaChanged();
    partial void OnMaMatHangChanging(string value);
    partial void OnMaMatHangChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnLaGiaHienTaiChanging(System.Nullable<bool> value);
    partial void OnLaGiaHienTaiChanged();
    #endregion
		
		public DonGiaBan()
		{
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonGia", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDonGia
		{
			get
			{
				return this._MaDonGia;
			}
			set
			{
				if ((this._MaDonGia != value))
				{
					this.OnMaDonGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDonGia = value;
					this.SendPropertyChanged("MaDonGia");
					this.OnMaDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMatHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMatHang
		{
			get
			{
				return this._MaMatHang;
			}
			set
			{
				if ((this._MaMatHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMatHangChanging(value);
					this.SendPropertyChanging();
					this._MaMatHang = value;
					this.SendPropertyChanged("MaMatHang");
					this.OnMaMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Money")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaGiaHienTai", DbType="Bit")]
		public System.Nullable<bool> LaGiaHienTai
		{
			get
			{
				return this._LaGiaHienTai;
			}
			set
			{
				if ((this._LaGiaHienTai != value))
				{
					this.OnLaGiaHienTaiChanging(value);
					this.SendPropertyChanging();
					this._LaGiaHienTai = value;
					this.SendPropertyChanged("LaGiaHienTai");
					this.OnLaGiaHienTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_DonGiaBan", Storage="_MatHang", ThisKey="MaMatHang", OtherKey="MaMatHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.DonGiaBans.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.DonGiaBans.Add(this);
						this._MaMatHang = value.MaMatHang;
					}
					else
					{
						this._MaMatHang = default(string);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonGiaNhap")]
	public partial class DonGiaNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDonGia;
		
		private string _MaMatHang;
		
		private System.Nullable<decimal> _Gia;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private System.Nullable<bool> _GiaHienTai;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonGiaChanging(string value);
    partial void OnMaDonGiaChanged();
    partial void OnMaMatHangChanging(string value);
    partial void OnMaMatHangChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnGiaHienTaiChanging(System.Nullable<bool> value);
    partial void OnGiaHienTaiChanged();
    #endregion
		
		public DonGiaNhap()
		{
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonGia", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDonGia
		{
			get
			{
				return this._MaDonGia;
			}
			set
			{
				if ((this._MaDonGia != value))
				{
					this.OnMaDonGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDonGia = value;
					this.SendPropertyChanged("MaDonGia");
					this.OnMaDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMatHang", DbType="NVarChar(50)")]
		public string MaMatHang
		{
			get
			{
				return this._MaMatHang;
			}
			set
			{
				if ((this._MaMatHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMatHangChanging(value);
					this.SendPropertyChanging();
					this._MaMatHang = value;
					this.SendPropertyChanged("MaMatHang");
					this.OnMaMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Money")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaHienTai", DbType="Bit")]
		public System.Nullable<bool> GiaHienTai
		{
			get
			{
				return this._GiaHienTai;
			}
			set
			{
				if ((this._GiaHienTai != value))
				{
					this.OnGiaHienTaiChanging(value);
					this.SendPropertyChanging();
					this._GiaHienTai = value;
					this.SendPropertyChanged("GiaHienTai");
					this.OnGiaHienTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_DonGiaNhap", Storage="_MatHang", ThisKey="MaMatHang", OtherKey="MaMatHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.DonGiaNhaps.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.DonGiaNhaps.Add(this);
						this._MaMatHang = value.MaMatHang;
					}
					else
					{
						this._MaMatHang = default(string);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangNhap")]
	public partial class HangNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHieu;
		
		private string _MaMatHang;
		
		private System.Nullable<decimal> _Gia;
		
		private string _MaThue;
		
		private System.Nullable<decimal> _ThanhTien;
		
		private System.Nullable<decimal> _Thue;
		
		private System.Nullable<double> _SoLuong;
		
		private System.Nullable<decimal> _TongCong;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private EntityRef<BangThue> _BangThue;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHieuChanging(string value);
    partial void OnSoHieuChanged();
    partial void OnMaMatHangChanging(string value);
    partial void OnMaMatHangChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    partial void OnMaThueChanging(string value);
    partial void OnMaThueChanged();
    partial void OnThanhTienChanging(System.Nullable<decimal> value);
    partial void OnThanhTienChanged();
    partial void OnThueChanging(System.Nullable<decimal> value);
    partial void OnThueChanged();
    partial void OnSoLuongChanging(System.Nullable<double> value);
    partial void OnSoLuongChanged();
    partial void OnTongCongChanging(System.Nullable<decimal> value);
    partial void OnTongCongChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    #endregion
		
		public HangNhap()
		{
			this._BangThue = default(EntityRef<BangThue>);
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHieu
		{
			get
			{
				return this._SoHieu;
			}
			set
			{
				if ((this._SoHieu != value))
				{
					this.OnSoHieuChanging(value);
					this.SendPropertyChanging();
					this._SoHieu = value;
					this.SendPropertyChanged("SoHieu");
					this.OnSoHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMatHang", DbType="NVarChar(50)")]
		public string MaMatHang
		{
			get
			{
				return this._MaMatHang;
			}
			set
			{
				if ((this._MaMatHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMatHangChanging(value);
					this.SendPropertyChanging();
					this._MaMatHang = value;
					this.SendPropertyChanged("MaMatHang");
					this.OnMaMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Money")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThue", DbType="NVarChar(50)")]
		public string MaThue
		{
			get
			{
				return this._MaThue;
			}
			set
			{
				if ((this._MaThue != value))
				{
					if (this._BangThue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThueChanging(value);
					this.SendPropertyChanging();
					this._MaThue = value;
					this.SendPropertyChanged("MaThue");
					this.OnMaThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Money")]
		public System.Nullable<decimal> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thue", DbType="Money")]
		public System.Nullable<decimal> Thue
		{
			get
			{
				return this._Thue;
			}
			set
			{
				if ((this._Thue != value))
				{
					this.OnThueChanging(value);
					this.SendPropertyChanging();
					this._Thue = value;
					this.SendPropertyChanged("Thue");
					this.OnThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Float")]
		public System.Nullable<double> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongCong", DbType="Money")]
		public System.Nullable<decimal> TongCong
		{
			get
			{
				return this._TongCong;
			}
			set
			{
				if ((this._TongCong != value))
				{
					this.OnTongCongChanging(value);
					this.SendPropertyChanging();
					this._TongCong = value;
					this.SendPropertyChanged("TongCong");
					this.OnTongCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangThue_HangNhap", Storage="_BangThue", ThisKey="MaThue", OtherKey="MaThue", IsForeignKey=true)]
		public BangThue BangThue
		{
			get
			{
				return this._BangThue.Entity;
			}
			set
			{
				BangThue previousValue = this._BangThue.Entity;
				if (((previousValue != value) 
							|| (this._BangThue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BangThue.Entity = null;
						previousValue.HangNhaps.Remove(this);
					}
					this._BangThue.Entity = value;
					if ((value != null))
					{
						value.HangNhaps.Add(this);
						this._MaThue = value.MaThue;
					}
					else
					{
						this._MaThue = default(string);
					}
					this.SendPropertyChanged("BangThue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_HangNhap", Storage="_MatHang", ThisKey="MaMatHang", OtherKey="MaMatHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.HangNhaps.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.HangNhaps.Add(this);
						this._MaMatHang = value.MaMatHang;
					}
					else
					{
						this._MaMatHang = default(string);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatHang")]
	public partial class MatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMatHang;
		
		private string _TenHang;
		
		private string _DonViTinh;
		
		private EntitySet<DonGiaBan> _DonGiaBans;
		
		private EntitySet<DonGiaNhap> _DonGiaNhaps;
		
		private EntitySet<HangNhap> _HangNhaps;
		
		private EntitySet<HangBan> _HangBans;
		
		private EntitySet<KhoXang> _KhoXangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMatHangChanging(string value);
    partial void OnMaMatHangChanged();
    partial void OnTenHangChanging(string value);
    partial void OnTenHangChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    #endregion
		
		public MatHang()
		{
			this._DonGiaBans = new EntitySet<DonGiaBan>(new Action<DonGiaBan>(this.attach_DonGiaBans), new Action<DonGiaBan>(this.detach_DonGiaBans));
			this._DonGiaNhaps = new EntitySet<DonGiaNhap>(new Action<DonGiaNhap>(this.attach_DonGiaNhaps), new Action<DonGiaNhap>(this.detach_DonGiaNhaps));
			this._HangNhaps = new EntitySet<HangNhap>(new Action<HangNhap>(this.attach_HangNhaps), new Action<HangNhap>(this.detach_HangNhaps));
			this._HangBans = new EntitySet<HangBan>(new Action<HangBan>(this.attach_HangBans), new Action<HangBan>(this.detach_HangBans));
			this._KhoXangs = new EntitySet<KhoXang>(new Action<KhoXang>(this.attach_KhoXangs), new Action<KhoXang>(this.detach_KhoXangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMatHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMatHang
		{
			get
			{
				return this._MaMatHang;
			}
			set
			{
				if ((this._MaMatHang != value))
				{
					this.OnMaMatHangChanging(value);
					this.SendPropertyChanging();
					this._MaMatHang = value;
					this.SendPropertyChanged("MaMatHang");
					this.OnMaMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHang
		{
			get
			{
				return this._TenHang;
			}
			set
			{
				if ((this._TenHang != value))
				{
					this.OnTenHangChanging(value);
					this.SendPropertyChanging();
					this._TenHang = value;
					this.SendPropertyChanged("TenHang");
					this.OnTenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_DonGiaBan", Storage="_DonGiaBans", ThisKey="MaMatHang", OtherKey="MaMatHang")]
		public EntitySet<DonGiaBan> DonGiaBans
		{
			get
			{
				return this._DonGiaBans;
			}
			set
			{
				this._DonGiaBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_DonGiaNhap", Storage="_DonGiaNhaps", ThisKey="MaMatHang", OtherKey="MaMatHang")]
		public EntitySet<DonGiaNhap> DonGiaNhaps
		{
			get
			{
				return this._DonGiaNhaps;
			}
			set
			{
				this._DonGiaNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_HangNhap", Storage="_HangNhaps", ThisKey="MaMatHang", OtherKey="MaMatHang")]
		public EntitySet<HangNhap> HangNhaps
		{
			get
			{
				return this._HangNhaps;
			}
			set
			{
				this._HangNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_HangBan", Storage="_HangBans", ThisKey="MaMatHang", OtherKey="MaMatHang")]
		public EntitySet<HangBan> HangBans
		{
			get
			{
				return this._HangBans;
			}
			set
			{
				this._HangBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_KhoXang", Storage="_KhoXangs", ThisKey="MaMatHang", OtherKey="MaHang")]
		public EntitySet<KhoXang> KhoXangs
		{
			get
			{
				return this._KhoXangs;
			}
			set
			{
				this._KhoXangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonGiaBans(DonGiaBan entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_DonGiaBans(DonGiaBan entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_DonGiaNhaps(DonGiaNhap entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_DonGiaNhaps(DonGiaNhap entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_HangNhaps(HangNhap entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_HangNhaps(HangNhap entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_HangBans(HangBan entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_HangBans(HangBan entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
		
		private void attach_KhoXangs(KhoXang entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_KhoXangs(KhoXang entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangBan")]
	public partial class HangBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHieu;
		
		private string _MaMatHang;
		
		private System.Nullable<decimal> _Gia;
		
		private string _MaThue;
		
		private System.Nullable<decimal> _ThanhTien;
		
		private System.Nullable<decimal> _Thue;
		
		private System.Nullable<double> _SoLuong;
		
		private System.Nullable<decimal> _TongCong;
		
		private System.Nullable<System.DateTime> _NgayBan;
		
		private EntityRef<BangThue> _BangThue;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHieuChanging(string value);
    partial void OnSoHieuChanged();
    partial void OnMaMatHangChanging(string value);
    partial void OnMaMatHangChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    partial void OnMaThueChanging(string value);
    partial void OnMaThueChanged();
    partial void OnThanhTienChanging(System.Nullable<decimal> value);
    partial void OnThanhTienChanged();
    partial void OnThueChanging(System.Nullable<decimal> value);
    partial void OnThueChanged();
    partial void OnSoLuongChanging(System.Nullable<double> value);
    partial void OnSoLuongChanged();
    partial void OnTongCongChanging(System.Nullable<decimal> value);
    partial void OnTongCongChanged();
    partial void OnNgayBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBanChanged();
    #endregion
		
		public HangBan()
		{
			this._BangThue = default(EntityRef<BangThue>);
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHieu
		{
			get
			{
				return this._SoHieu;
			}
			set
			{
				if ((this._SoHieu != value))
				{
					this.OnSoHieuChanging(value);
					this.SendPropertyChanging();
					this._SoHieu = value;
					this.SendPropertyChanged("SoHieu");
					this.OnSoHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMatHang", DbType="NVarChar(50)")]
		public string MaMatHang
		{
			get
			{
				return this._MaMatHang;
			}
			set
			{
				if ((this._MaMatHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMatHangChanging(value);
					this.SendPropertyChanging();
					this._MaMatHang = value;
					this.SendPropertyChanged("MaMatHang");
					this.OnMaMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Money")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThue", DbType="NVarChar(50)")]
		public string MaThue
		{
			get
			{
				return this._MaThue;
			}
			set
			{
				if ((this._MaThue != value))
				{
					if (this._BangThue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThueChanging(value);
					this.SendPropertyChanging();
					this._MaThue = value;
					this.SendPropertyChanged("MaThue");
					this.OnMaThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Money")]
		public System.Nullable<decimal> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thue", DbType="Money")]
		public System.Nullable<decimal> Thue
		{
			get
			{
				return this._Thue;
			}
			set
			{
				if ((this._Thue != value))
				{
					this.OnThueChanging(value);
					this.SendPropertyChanging();
					this._Thue = value;
					this.SendPropertyChanged("Thue");
					this.OnThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Float")]
		public System.Nullable<double> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongCong", DbType="Money")]
		public System.Nullable<decimal> TongCong
		{
			get
			{
				return this._TongCong;
			}
			set
			{
				if ((this._TongCong != value))
				{
					this.OnTongCongChanging(value);
					this.SendPropertyChanging();
					this._TongCong = value;
					this.SendPropertyChanged("TongCong");
					this.OnTongCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBan
		{
			get
			{
				return this._NgayBan;
			}
			set
			{
				if ((this._NgayBan != value))
				{
					this.OnNgayBanChanging(value);
					this.SendPropertyChanging();
					this._NgayBan = value;
					this.SendPropertyChanged("NgayBan");
					this.OnNgayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BangThue_HangBan", Storage="_BangThue", ThisKey="MaThue", OtherKey="MaThue", IsForeignKey=true)]
		public BangThue BangThue
		{
			get
			{
				return this._BangThue.Entity;
			}
			set
			{
				BangThue previousValue = this._BangThue.Entity;
				if (((previousValue != value) 
							|| (this._BangThue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BangThue.Entity = null;
						previousValue.HangBans.Remove(this);
					}
					this._BangThue.Entity = value;
					if ((value != null))
					{
						value.HangBans.Add(this);
						this._MaThue = value.MaThue;
					}
					else
					{
						this._MaThue = default(string);
					}
					this.SendPropertyChanged("BangThue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_HangBan", Storage="_MatHang", ThisKey="MaMatHang", OtherKey="MaMatHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.HangBans.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.HangBans.Add(this);
						this._MaMatHang = value.MaMatHang;
					}
					else
					{
						this._MaMatHang = default(string);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoXang")]
	public partial class KhoXang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Thang;
		
		private int _Nam;
		
		private string _MaHang;
		
		private System.Nullable<double> _TonXang;
		
		private System.Nullable<double> _XangBan;
		
		private System.Nullable<double> _XangNhap;
		
		private System.Nullable<double> _TonCu;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    partial void OnMaHangChanging(string value);
    partial void OnMaHangChanged();
    partial void OnTonXangChanging(System.Nullable<double> value);
    partial void OnTonXangChanged();
    partial void OnXangBanChanging(System.Nullable<double> value);
    partial void OnXangBanChanged();
    partial void OnXangNhapChanging(System.Nullable<double> value);
    partial void OnXangNhapChanged();
    partial void OnTonCuChanging(System.Nullable<double> value);
    partial void OnTonCuChanged();
    #endregion
		
		public KhoXang()
		{
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonXang", DbType="Float")]
		public System.Nullable<double> TonXang
		{
			get
			{
				return this._TonXang;
			}
			set
			{
				if ((this._TonXang != value))
				{
					this.OnTonXangChanging(value);
					this.SendPropertyChanging();
					this._TonXang = value;
					this.SendPropertyChanged("TonXang");
					this.OnTonXangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XangBan", DbType="Float")]
		public System.Nullable<double> XangBan
		{
			get
			{
				return this._XangBan;
			}
			set
			{
				if ((this._XangBan != value))
				{
					this.OnXangBanChanging(value);
					this.SendPropertyChanging();
					this._XangBan = value;
					this.SendPropertyChanged("XangBan");
					this.OnXangBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XangNhap", DbType="Float")]
		public System.Nullable<double> XangNhap
		{
			get
			{
				return this._XangNhap;
			}
			set
			{
				if ((this._XangNhap != value))
				{
					this.OnXangNhapChanging(value);
					this.SendPropertyChanging();
					this._XangNhap = value;
					this.SendPropertyChanged("XangNhap");
					this.OnXangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonCu", DbType="Float")]
		public System.Nullable<double> TonCu
		{
			get
			{
				return this._TonCu;
			}
			set
			{
				if ((this._TonCu != value))
				{
					this.OnTonCuChanging(value);
					this.SendPropertyChanging();
					this._TonCu = value;
					this.SendPropertyChanged("TonCu");
					this.OnTonCuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_KhoXang", Storage="_MatHang", ThisKey="MaHang", OtherKey="MaMatHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.KhoXangs.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.KhoXangs.Add(this);
						this._MaHang = value.MaMatHang;
					}
					else
					{
						this._MaHang = default(string);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
